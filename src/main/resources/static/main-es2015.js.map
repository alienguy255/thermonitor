{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/output-graph/output-graph.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/output-graph/output-graph.component.css","./src/app/output-graph/output-graph.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,wIAAwI,SAAS,+W;;;;;;;;;;;ACAjJ,qCAAqC,eAAe,oBAAoB,cAAc,eAAe,2B;;;;;;;;;;;;;;;;;;ACA5D;AACc;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAM1B,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;ACV7B,+DAA+D,+H;;;;;;;;;;;;;;;;;;;;;;ACAU;AACzB;AAGf;AACO;AAOxC,IAAa,YAAY,GAAzB,MAAa,YAAY;IAUvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,UAAK,GAAG,sBAAsB,CAAC;QAEvB,kBAAa,GAAwC,IAAI,0DAAY,EAAyB,CAAC;QAC/F,oBAAe,GAAqC,IAAI,0DAAY,EAAsB,CAAC;QAInG,gBAAW,GAAiB,EAAE,CAAC;IAES,CAAC;IAEzC,QAAQ;QACN,MAAM,EAAE,GAAG,IAAI,0CAAM,CAAC,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,4CAAU,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE;YAChC,8BAA8B;YAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,MAAM,EAAE,EAAE;gBAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAE3C,MAAM,gBAAgB,GAA0B;oBAC9C,YAAY,EAAE,UAAU,CAAC,YAAY;oBACrC,MAAM,EAAE,UAAU,CAAC,MAAM;oBACzB,WAAW,EAAE,UAAU,CAAC,WAAW;oBACnC,UAAU,EAAE,UAAU,CAAC,UAAU;oBACjC,IAAI,EAAE,UAAU,CAAC,IAAI;iBACtB,CAAC;gBAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;YAEH,6CAA6C;YAC7C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,MAAM,EAAE,EAAE;gBAC9D,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,MAAM,CAAC,CAAC;gBAClD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAE3C,MAAM,kBAAkB,GAAuB;oBAC7C,WAAW,EAAE,UAAU,CAAC,WAAW;oBACnC,IAAI,EAAE,UAAU,CAAC,IAAI;iBACtB,CAAC;gBAEF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,2DAA2D;QAC3D,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,IAAI,CACtC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC5B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,gEAAgE,GAAG,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAG;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAE,CAAC;aAC/B,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YA9D2B,+DAAU;;AAVzB,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAwExB;AAxEwB;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACe;AAEA;AACT;AAC8B;AAe7E,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAbrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,yFAAoB;SACrB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SACjB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;ACrBtB,2BAA2B,qCAAqC,GAAG,+CAA+C,2V;;;;;;;;;;;;;;;;;;;;ACA3C;AACpB;AACD;AAKlD,IAAI,KAAK,GAAG,mBAAO,CAAC,4EAA0B,CAAC,CAAC;AAChD,IAAI,MAAM,GAAG,mBAAO,CAAC,sGAAuC,CAAC,CAAC;AAC9D,IAAI,IAAI,GAAG,mBAAO,CAAC,gFAA4B,CAAC,CAAC;AAGjD,KAAK,CAAC,iDAAU,CAAC,CAAC;AAClB,MAAM,CAAC,iDAAU,CAAC,CAAC;AACnB,IAAI,CAAC,iDAAU,CAAC,CAAC;AACjB,MAAM,CAAC,iDAAU,CAAC,CAAC;AAOnB,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAuG/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QA/F7B,YAAO,GAAQ;YACpB,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,GAAG;aACZ;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,oBAAoB;aAC3B;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf;YACD,OAAO,EAAE;gBACP,SAAS;oBACP,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAY,EAAE,EAAE;wBAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;4BACvG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;wBACxE,0EAA0E;oBAC5E,CAAC,EAAE,KAAK,GAAG,+DAAqB,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;gBACjG,CAAC;aACF;YACD,4GAA4G;YAC5G,aAAa,EAAE;gBACb,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,CAAC;wBACR,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,CAAC;wBACR,IAAI,EAAE,IAAI;qBACX,EAAE;wBACD,IAAI,EAAE,KAAK;wBACX,KAAK,EAAE,CAAC;wBACR,IAAI,EAAE,IAAI;qBACX,EAAE;wBACD,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,KAAK;qBACZ;iBACA;gBACD,QAAQ,EAAE,CAAC;aACZ;YACD,KAAK,EAAE,CAAC;oBACN,KAAK,EAAE;wBACL,IAAI,EAAE,kBAAkB;qBACzB;oBACD,MAAM,EAAE,KAAK;iBACd,EAAE;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE,KAAK;oBACV,MAAM,EAAE,KAAK;iBACd,CAAC;YACF,IAAI,EAAE;gBACJ,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,CAAC,GAAG,EAAE;aACvB;YACD,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,aAAa;oBACnB,IAAI,EAAE,EAAE;oBACR,aAAa,EAAE,EAAE,GAAG,IAAI;oBACxB,MAAM,EAAE,CAAC;oBACT,OAAO,EAAE;wBACP,aAAa,EAAE,CAAC;wBAChB,WAAW,EAAE,IAAI;qBAClB;iBACF;gBACD;oBACE,IAAI,EAAE,oBAAoB;oBAC1B,IAAI,EAAE,EAAE;oBACR,aAAa,EAAE,EAAE,GAAG,IAAI;oBACxB,SAAS,EAAE,WAAW;oBACtB,MAAM,EAAE,CAAC;oBACT,OAAO,EAAE;wBACP,aAAa,EAAE,CAAC;wBAChB,WAAW,EAAE,IAAI;qBAClB;iBACF;gBACD;oBACE,IAAI,EAAE,qBAAqB;oBAC3B,IAAI,EAAE,EAAE;oBACR,aAAa,EAAE,EAAE,GAAG,IAAI;oBACxB,MAAM,EAAE,CAAC;oBACT,OAAO,EAAE;wBACP,aAAa,EAAE,CAAC;wBAChB,WAAW,EAAE,IAAI;qBAClB;iBACF;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,EAAE;oBACR,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,CAAC;iBACT;aACF;SACF,CAAC;IAEsC,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE;YAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,gBAAgB,CAAC,YAAY,EAAE;gBACxD,OAAO,CAAC,GAAG,CAAC,iDAAiD,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC;gBAE/F,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACtG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAErG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEjG,sHAAsH;gBACtH,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,YAAY,EAAC,CAAC,CAAC;iBACvE;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,SAAS,EAAC,CAAC,CAAC;iBACpE;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,kBAAkB,CAAC,IAAI,GAAG,gBAAgB,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;YAC/H,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5G,CAAC,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QAE1B,yEAAyE;QACzE,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,oBAAoB,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,UAAU,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CACxI,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,GAAG,oBAAoB,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,UAAU,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAC3I,cAAc,CAAC,EAAE;gBACf,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7D,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,6DAA6D,GAAG,KAAK,CAAC,CAAC;YACrF,CAAC,CACJ,CAAC;QACJ,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,gEAAgE,GAAG,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,GAAG;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAE,CAAC;aAC/B,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK;QACrC,MAAM,eAAe,GAAG,EAAE,CAAC;QAC3B,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAClC,MAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACjC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACxC,eAAe,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;YAEpC,MAAM,aAAa,GAAG,EAAE,CAAC;YACzB,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAChC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YACtC,cAAc,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;YAElC,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC5B,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC9B,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;SAC5B;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,eAAe,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,cAAc,CAAC;QAE7C,gCAAgC;QAChC,MAAM,iBAAiB,GAAG,EAAE,CAAC;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3C,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAClD,iBAAiB,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;SACvC;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,WAAW,CAAC;QAE1C,wFAAwF;QACxF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;QAC5H,IAAI,CAAC,UAAU,GAAG,+DAAqB,CAAC,WAAW,GAAG,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAChF,CAAC;CAEF;;YA7F2B,+DAAU;;AAnG3B;IAAR,2DAAK,EAAE;wDAAgC;AAC/B;IAAR,2DAAK,EAAE;2DAA4D;AAC3D;IAAR,2DAAK,EAAE;6DAA2D;AANxD,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,sKAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAoMhC;AApMgC;;;;;;;;;;;;;ACtBjC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n\\n    <div *ngIf=\\\"isDataAvailable()\\\">\\n      <div *ngFor=\\\"let tstat of thermostats\\\">\\n        <app-output-graph [thermostat]=\\\"tstat\\\"\\n                          [onTstatUpdate]=\\\"onTstatUpdate\\\"\\n                          [onWeatherUpdate]=\\\"onWeatherUpdate\\\"></app-output-graph>\\n      </div>\\n    </div>\\n\\n</div>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div id=container{{thermostat.id}} style=\\\"float:left; width: 800px; height: 400px; margin: 0 auto\\\"></div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Thermostat, ThermostatUpdateEvent, WeatherUpdateEvent} from 'src/app/models/thermostat';\n\nimport * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnChanges {\n  title = 'Thermostat Dashboard';\n\n  private onTstatUpdate: EventEmitter<ThermostatUpdateEvent> = new EventEmitter<ThermostatUpdateEvent>();\n  private onWeatherUpdate: EventEmitter<WeatherUpdateEvent> = new EventEmitter<WeatherUpdateEvent>();\n\n  private stompClient;\n\n  thermostats: Thermostat[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    const ws = new SockJS('/websocket');\n    this.stompClient = Stomp.over(ws);\n    const that = this;\n\n    this.stompClient.connect({}, () => {\n      // subscribe to tstat updates:\n      that.stompClient.subscribe('/topic/tstat-updates', (update) => {\n        const updateBody = JSON.parse(update.body);\n\n        const tstatUpdateEvent: ThermostatUpdateEvent = {\n          thermostatId: updateBody.thermostatId,\n          tstate: updateBody.tstate,\n          currentTemp: updateBody.currentTemp,\n          targetTemp: updateBody.targetTemp,\n          time: updateBody.time\n        };\n\n        that.onTstatUpdate.emit(tstatUpdateEvent);\n      });\n\n      // subscribe to current outdoor temp updates:\n      that.stompClient.subscribe('/topic/weather-updates', (update) => {\n        console.log('received weather update: ' + update);\n        const updateBody = JSON.parse(update.body);\n\n        const weatherUpdateEvent: WeatherUpdateEvent = {\n          currentTemp: updateBody.currentTemp,\n          time: updateBody.time\n        };\n\n        that.onWeatherUpdate.emit(weatherUpdateEvent);\n      });\n    });\n\n    // load all thermostats from server, render chart per tstat\n    this.getApiResponse('/thermostats').then(\n      tstats => {\n        this.thermostats = tstats;\n      },\n      error => {\n        console.log('An error occurred retrieving thermostat data from the server. ' + error);\n      });\n  }\n\n  ngOnChanges() {\n    console.log('change detected!');\n  }\n\n  isDataAvailable() {\n    return this.thermostats.length > 0;\n  }\n\n  getApiResponse(url) {\n    return this.http.get<any>(url, {})\n      .toPromise().then(res => {\n        return res;\n      });\n  }\n\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OutputGraphComponent } from './output-graph/output-graph.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OutputGraphComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#heading{\\n  background-color: cornflowerblue;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3V0cHV0LWdyYXBoL291dHB1dC1ncmFwaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvb3V0cHV0LWdyYXBoL291dHB1dC1ncmFwaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2hlYWRpbmd7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvcm5mbG93ZXJibHVlO1xufVxuIl19 */\"","import { Component, EventEmitter, OnInit, Input } from '@angular/core';\nimport * as Highcharts from 'highcharts/highstock';\nimport { HttpClient } from '@angular/common/http';\nimport {Thermostat, ThermostatUpdateEvent, WeatherUpdateEvent} from 'src/app/models/thermostat';\nimport {Point} from 'highcharts';\n\ndeclare var require: any;\nlet Boost = require('highcharts/modules/boost');\nlet noData = require('highcharts/modules/no-data-to-display');\nlet More = require('highcharts/highcharts-more');\n\n\nBoost(Highcharts);\nnoData(Highcharts);\nMore(Highcharts);\nnoData(Highcharts);\n\n@Component({\n  selector: 'app-output-graph',\n  templateUrl: './output-graph.component.html',\n  styleUrls: ['./output-graph.component.css']\n})\nexport class OutputGraphComponent implements OnInit {\n\n  private stockChart: Highcharts.Chart;\n\n  @Input() private thermostat: Thermostat;\n  @Input() private onTstatUpdate: EventEmitter<ThermostatUpdateEvent>;\n  @Input() private onWeatherUpdate: EventEmitter<WeatherUpdateEvent>;\n\n  public options: any = {\n    chart: {\n      type: 'line',\n      height: 400\n    },\n    title: {\n      text: 'current temp chart'\n    },\n    credits: {\n      enabled: false\n    },\n    tooltip: {\n      formatter() {\n        return this.points.reduce((s, point: Point) => {\n          return point.series.name !== 'Runtime' ? s + '<br/>' + point.series.name + ': ' + point.y.toFixed(1) + '°F'\n              : s + '<br/>' + point.series.name + ': ' + point.y.toFixed(0) + 'm';\n          // TODO: figure out how to use non-utc time instead of subtracting 5 hours\n        }, '<b>' + Highcharts.dateFormat('%e %b %y %H:%M:%S', this.x - (60 * 60 * 1000 * 5)) + '</b>');\n      }\n    },\n    // TODO: figure out how to select and drag with cursor like original version does....onSetExtreemes() maybe?\n    rangeSelector: {\n      inputEnabled: true,\n      buttons: [{\n        type: 'hour',\n        count: 3,\n        text: '3h'\n      }, {\n        type: 'day',\n        count: 1,\n        text: '1d'\n      }, {\n        type: 'all',\n        text: 'All'\n      }\n      ],\n      selected: 1\n    },\n    yAxis: [{\n      title: {\n        text: 'Temperature (°F)'\n      },\n      height: '60%'\n    }, {\n      title: {\n        text: 'Runtime'\n      },\n      top: '65%',\n      height: '35%'\n    }],\n    time: {\n      useUTC: false,\n      timezoneOffset: 5 * 60\n    },\n    series: [\n      {\n        name: 'Temperature',\n        data: [],\n        pointInterval: 60 * 1000,\n        zIndex: 2,\n        tooltip: {\n          valueDecimals: 1,\n          valueSuffix: '°F'\n        }\n      },\n      {\n        name: 'Target Temperature',\n        data: [],\n        pointInterval: 60 * 1000,\n        dashStyle: 'ShortDash',\n        zIndex: 1,\n        tooltip: {\n          valueDecimals: 1,\n          valueSuffix: '°F'\n        }\n      },\n      {\n        name: 'Outside Temperature',\n        data: [],\n        pointInterval: 60 * 1000,\n        zIndex: 0,\n        tooltip: {\n          valueDecimals: 1,\n          valueSuffix: '°F'\n        },\n      },\n      {\n        name: 'Runtime',\n        data: [],\n        type: 'column',\n        yAxis: 1\n      }\n    ]\n  };\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.onTstatUpdate.subscribe(tstatUpdateEvent => {\n      if (this.thermostat.id === tstatUpdateEvent.thermostatId) {\n        console.log('Received tstat update, update for thermostatId=' + tstatUpdateEvent.thermostatId);\n\n        this.stockChart.series[0].addPoint([tstatUpdateEvent.time, tstatUpdateEvent.currentTemp], true, true);\n        this.stockChart.series[1].addPoint([tstatUpdateEvent.time, tstatUpdateEvent.targetTemp], true, true);\n\n        this.stockChart.series[3].addPoint([tstatUpdateEvent.time, tstatUpdateEvent.tstate], true, true);\n\n        // change status in chart title depending on if the event indicates running or not (tstate of 1 is running, 0 is idle)\n        if (tstatUpdateEvent.tstate === 1) {\n          this.stockChart.setTitle({text: this.thermostat.name + ' (Running)'});\n        } else {\n          this.stockChart.setTitle({text: this.thermostat.name + ' (Idle)'});\n        }\n      }\n    });\n\n    this.onWeatherUpdate.subscribe(weatherUpdateEvent => {\n      console.log('Received weather update for time=' + weatherUpdateEvent.time + ', currentTemp=' + weatherUpdateEvent.currentTemp);\n      this.stockChart.series[2].addPoint([weatherUpdateEvent.time, weatherUpdateEvent.currentTemp], true, true);\n    });\n\n    const fromTime = new Date();\n    fromTime.setDate(fromTime.getDate() - 7);\n    const toTime = new Date();\n\n    // TODO: find better way rather than loading weather data for every tstat\n    this.getApiResponse('/thermostats/' + this.thermostat.id + '/samples?fromTime=' + fromTime.getTime() + '&toTime=' + toTime.getTime()).then(\n      samples => {\n        this.getApiResponse('/weather/' + this.thermostat.location.id + '/samples?fromTime=' + fromTime.getTime() + '&toTime=' + toTime.getTime()).then(\n            weatherSamples => {\n              this.renderChart(samples, weatherSamples, this.thermostat);\n            },\n            error => {\n              console.log('An error occurred retrieving weather data from the server. ' + error);\n            }\n        );\n      },\n      error => {\n        console.log('An error occurred retrieving thermostat data from the server. ' + error);\n      });\n  }\n\n  getApiResponse(url) {\n    return this.http.get<any>(url, {})\n      .toPromise().then(res => {\n        return res;\n      });\n  }\n\n  renderChart(data, weatherSamples, tstat) {\n    const currentTempData = [];\n    const targetTempData = [];\n    const runtimeData = [];\n    for(var i = 0; i < data.length; i++){\n      const currentTempVal = [];\n      currentTempVal[0] = data[i].time;\n      currentTempVal[1] = data[i].currentTemp;\n      currentTempData[i] = currentTempVal;\n\n      const targetTempVal = [];\n      targetTempVal[0] = data[i].time;\n      targetTempVal[1] = data[i].targetTemp;\n      targetTempData[i] = targetTempVal;\n\n      const tstateVal = [];\n      tstateVal[0] = data[i].time;\n      tstateVal[1] = data[i].tstate;\n      runtimeData[i] = tstateVal;\n    }\n    this.options.series[0].data = currentTempData;\n    this.options.series[1].data = targetTempData;\n\n    // load weather data into chart:\n    const outsideTempSeries = [];\n    for(var i = 0; i < weatherSamples.length; i++) {\n      const outsideTempVal = [];\n      outsideTempVal[0] = weatherSamples[i].time;\n      outsideTempVal[1] = weatherSamples[i].currentTemp;\n      outsideTempSeries[i] = outsideTempVal;\n    }\n    this.options.series[2].data = outsideTempSeries;\n    this.options.series[3].data = runtimeData;\n\n    // TODO: seems like server is always returning null for last runtime data point in array\n    this.options.title.text = runtimeData[runtimeData.length - 1][1] === 1 ? tstat.name + ' (Running)' : tstat.name + ' (Idle)';\n    this.stockChart = Highcharts.stockChart('container' + tstat.id, this.options);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}